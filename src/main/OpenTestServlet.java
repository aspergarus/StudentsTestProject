package main;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import dao.GroupsDAO;
import dao.StudentDAO;
import dao.TestsDAO;
import beans.GroupBean;
import beans.TestBean;
import beans.UserBean;

/**
 * Servlet implementation class OpenTestServlet
 */
@WebServlet("/openTest")
public class OpenTestServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public OpenTestServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		UserBean user = (session != null) ? (UserBean) session.getAttribute("user") : null;
		
		if (user == null) {
			response.sendRedirect(request.getContextPath() + "/login");
		} else if (user.getRole() == 0) {
			request.setAttribute("status", "warning");
			request.setAttribute("message", "You don't have access to this page.");
			request.getRequestDispatcher("error-access.jsp").forward(request, response);
		} else {
			String status = (String) session.getAttribute("status");
			String message = (String) session.getAttribute("message");
			
			if (status != null && message != null) {
				request.setAttribute("status", status);
				request.setAttribute("message", message);
				session.setAttribute("status", null);
				session.setAttribute("message", null);
			}
			String sTestId = request.getParameter("id");
			
			try {
				int testId = Integer.parseInt(sTestId);
				TestBean currentTest = TestsDAO.find(testId);
				
				if (currentTest != null) {
					ArrayList<UserBean> students = TestsDAO.getReadyStudents(testId);
					ArrayList<Integer> testStudentsId = TestsDAO.getTestStudents(testId);
					HashMap<Integer, String> groupsMap = GroupsDAO.getGroupsMap();
					
					request.setAttribute("currentTest", currentTest);
					request.setAttribute("students", students);
					request.setAttribute("testStudentsId", testStudentsId);
					request.setAttribute("groupsMap", groupsMap);
					request.getRequestDispatcher("/open-tests.jsp").forward(request, response);
				} else {
					response.sendError(404);
				}
			} catch (NumberFormatException e) {
				response.sendError(404);
			}
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession(false);
		UserBean user = (session != null) ? (UserBean) session.getAttribute("user") : null;
		
		if (user == null) {
			response.sendError(403);
		}
		
		else {
			
			int testId = Integer.parseInt(request.getParameter("id"));
			
			String groupName = request.getParameter("group");
			String student = request.getParameter("student");
			
			if (groupName != null && !groupName.equals("")) {
				GroupBean group = GroupsDAO.find(groupName);
				
				if (GroupsDAO.appendToReady(testId, group.getId())) {
					session.setAttribute("status", "success");
					session.setAttribute("message", "The group " + groupName + " was appended to ready list.");
				} else {
					session.setAttribute("status", "danger");
					session.setAttribute("message", "Some troubles were occurred during appending group to ready list.");
				}
				
			} else if (student != null && !student.equals("")) {
				int studentId = Integer.parseInt(student.substring(student.indexOf("[") + 1, student.indexOf("]")));
			
				if (StudentDAO.appendToReady(testId, studentId)) {
					session.setAttribute("status", "success");
					session.setAttribute("message", "The group " + groupName + " was appended to ready list.");
				} else {
					session.setAttribute("status", "danger");
					session.setAttribute("message", "Some troubles were occurred during appending group to ready list.");
				}
			}
			response.sendRedirect(request.getContextPath() + "/openTest" + "?id=" + testId);
		}
	}
	
	protected void doPut(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession(false);
		UserBean user = (session != null) ? (UserBean) session.getAttribute("user") : null;

		if (user == null) {
			response.sendError(403);
		}
		else {
			//Update in DB
			String headerStudenstId = request.getHeader("studentsId");
			String headerTestId = request.getHeader("testId");
			String [] id = headerStudenstId.split(",");
			
			int size = id.length;
			int [] studentsId = new int[size];
			
			if (headerTestId != null && headerTestId.trim() != "") {
				int testId = Integer.parseInt(headerTestId);
				
				TestsDAO.closeTest(testId);
				
				if (headerStudenstId.length() > 0) {
					for (int i = 0; i < size; i++) {
						studentsId[i] = Integer.parseInt(id[i]);
					}
					
					if (TestsDAO.openTest(studentsId, testId)) {
						response.getOutputStream().println("Success");
					} else {
						response.getOutputStream().println("Error");
					}
				}
				response.getOutputStream().println("Success");
			} else {
				response.getOutputStream().println("Error");
			}
		}
	}
	
	protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession(false);
		UserBean user = (session != null) ? (UserBean) session.getAttribute("user") : null;

		if (user == null) {
			response.sendError(403);
		} else {
			
			String sTestId = request.getHeader("testId");
			String sStudentId = request.getHeader("studentId");
			
			int testId = Integer.parseInt(sTestId);
			
			if (sStudentId != null) {
				int studentId = Integer.parseInt(sStudentId);
				if (TestsDAO.removeReadyStudents(testId, studentId)) {
					response.getOutputStream().println("Student was successfully removed from ready list.");
				} else {
					response.getOutputStream().println("Some troubles were occured during removing student from ready list.");
				}
			} else {
				if (TestsDAO.removeReadyStudents(testId)) {
					response.getOutputStream().println("Students was successfully removed from ready list.");
				} else {
					response.getOutputStream().println("Some troubles were occured during removing students from ready list.");
				}
			}
		}
	}
}
